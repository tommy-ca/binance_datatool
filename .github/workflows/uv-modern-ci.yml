name: Modern UV CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install UV
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
    
    - name: Add UV to PATH
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Create virtual environment
      run: uv venv --python ${{ matrix.python-version }}
    
    - name: Sync dependencies
      run: uv sync --all-extras
    
    - name: Run linting
      run: |
        uv run ruff check src/ tests/
        uv run black --check src/ tests/
        uv run isort --check-only src/ tests/
    
    - name: Run type checking
      run: uv run mypy src/
    
    - name: Run tests
      run: uv run pytest tests/ --cov=crypto_lakehouse --cov-report=xml --cov-fail-under=10
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install UV
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
    
    - name: Add UV to PATH
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Set up Python
      run: uv python install 3.12
    
    - name: Create virtual environment
      run: uv venv --python 3.12
    
    - name: Sync dependencies
      run: uv sync --all-extras
    
    - name: Install build dependencies
      run: uv add --dev build
    
    - name: Build package
      run: uv run python -m build
    
    - name: Install twine for checking
      run: uv add --dev twine
    
    - name: Check package
      run: uv run twine check dist/*
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  performance-benchmark:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install UV
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
    
    - name: Add UV to PATH
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Benchmark modern UV workflow
      run: |
        echo "🚀 Modern UV Performance Benchmark"
        echo "================================="
        
        # Time UV environment creation
        echo "🏗️ Virtual Environment Creation:"
        time uv venv --python 3.12
        
        echo "🔄 Dependency Sync Time:"
        time uv sync --all-extras
        
        echo "📦 Package Installation Test:"
        time uv add --dev pytest-benchmark
        
        echo "🚀 Command Execution Time:"
        time uv run python --version
        
        echo "✅ Modern UV Performance Benchmark Complete"
    
    - name: Test CLI performance
      run: |
        echo "🧪 CLI Performance Test:"
        time uv run crypto-lakehouse --help
        
        echo "🐍 Python Import Test:"
        time uv run python -c "from crypto_lakehouse import CryptoLakehouse; print('OK')"
        
        echo "📊 Dependency Tree Test:"
        time uv tree --depth 1

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install UV
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
    
    - name: Add UV to PATH
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Set up Python
      run: uv python install 3.12
    
    - name: Create virtual environment
      run: uv venv --python 3.12
    
    - name: Sync dependencies
      run: uv sync --all-extras
    
    - name: Install security tools
      run: uv add --dev bandit safety
    
    - name: Run security scan
      run: |
        uv run bandit -r src/ -f json -o bandit-report.json
        uv run safety check --json --output safety-report.json
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

  lock-file-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install UV
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
    
    - name: Add UV to PATH
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Check lock file is up to date
      run: |
        uv lock --check
        echo "✅ Lock file is up to date"
    
    - name: Validate lock file integrity
      run: |
        uv sync --locked
        echo "✅ Lock file is valid"