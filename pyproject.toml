[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "crypto-data-lakehouse"
version = "2.0.0"
description = "A scalable crypto data lakehouse platform for quantitative research"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Crypto Data Lakehouse Team"}
]
keywords = ["crypto", "data", "lakehouse", "binance", "quantitative"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
]
requires-python = ">=3.12"
dependencies = [
    "polars>=1.0.0",
    "typer>=0.15.0",
    "aiohttp>=3.11.0",
    "pydantic>=2.0.0",
    "prefect>=3.0.0",
    "s3fs>=2024.10.0",
    "boto3>=1.35.0",
    "duckdb>=1.1.0",
    "tqdm>=4.66.0",
    "python-dateutil>=2.9.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "black>=24.0.0",
    "ruff>=0.7.0",
    "mypy>=1.11.0",
]
aws = [
    "boto3>=1.35.0",
    "s3fs>=2024.10.0",
    "awscli>=1.36.0",
]
orchestration = [
    "prefect>=3.0.0",
    "dagster>=1.8.0",
]

[project.scripts]
crypto-lakehouse = "crypto_lakehouse.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 100
target-version = ['py312']

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "UP", "S", "B", "A", "C4", "T20"]
ignore = ["S101", "S603", "S607"]

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true